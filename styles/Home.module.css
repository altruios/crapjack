.main {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  padding: 6rem;
  min-height: 100vh;
}

.description {
  display: inherit;
  justify-content: inherit;
  align-items: inherit;
  font-size: 0.85rem;
  width: 100%;
  z-index: 2;
  font-family: var(--font-mono);
}

.description a {
  display: flex;
  justify-content: center;
  align-items: center;
  gap: 0.5rem;
}

.description p {
  position: relative;
  margin: 0;
  padding: 1rem;
  background-color: rgba(var(--callout-rgb), 0.5);
  border: 1px solid rgba(var(--callout-border-rgb), 0.3);
  border-radius: var(--border-radius);
}

.code {
  font-weight: 700;
  font-family: var(--font-mono);
}

.grid {
  display: grid;
  grid-template-columns: repeat(4, minmax(25%, auto));
  max-width: var(--max-width);
  width: 100%;
}


.cards {
	text-align: center;
	max-width: 640px;
	margin: 0 auto;
}

.card {
	position: relative;
	display: inline-block;
	font: 16px 'Trebuchet MS';
	height:12vh;
    width:10vh;
	margin: 10px;
	border-radius: 4px;
	background: #fff;
	box-shadow: 0 2px 4px rgba(0, 0, 0, 0.18);


	

}
.card:before,
.card:after {
    content: attr(value);
    position: absolute;
    width: 12px;
    text-align: center;
    letter-spacing: -2px;
}


.card:before {
    top:4px;
    left: 4px;
}

.card:after {
    bottom: 4px;
    right: 4px;
    transform: rotate(180deg)
}
.diamond:before,

.diamond {
    color: red;
    
 
}
.heart {
    color: red;
    
 
}
.heart:before,
.heart:after {
    content: attr(value) ' ♥';
}
.spade {
    color: black;
    
}
.club:before,

.club {
    color: black;
    
}

.spade:before,
.spade:after {
    content: attr(value) ' ♠';
}
.diamond:after {
    content: attr(value) ' ◆';
}
.club:after {
    content: attr(value) ' ♣';
}


.card__inner {
	box-sizing: border-box;
	position: absolute;
	display: flex;
	justify-content: space-between;
	top: 6 * 4px;
	left: 6 * 4px;
	right: 6 * 4px;
	bottom: 6 * 4px;
	

}
.card__column {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	

}
.--centered {
    justify-content: center;
}
.card__symbol {
	display: inline-block;
	height: 40px;
	text-align: center;
	
}

.card__symbol:before {
    font-size: 40px;
    line-height: 40px;
}

.heart &:before {
    content: '♥';
}

.spade &:before {
    content: '♠';
}
.diamond &:before {
    content: 'd';
}

.club &:before {
    content: 'c';
}
.card__symbol--rotated,
.card__symbol:last-of-type {
    transform: rotate(180deg);
}

.card__symbol:first-of-type {
    transform: rotate(0);
}

.card__symbol--big {
    flex-basis: 0.25 * 240px;
}

.card__symbol--huge {
    flex-basis: 0.45 * 240px;
}
/* Enable hover only on non-touch devices */
@media (hover: hover) and (pointer: fine) {
  .card:hover {
    background: rgba(var(--card-rgb), 0.1);
    border: 1px solid rgba(var(--card-border-rgb), 0.15);
  }

  .card:hover span {
    transform: translateX(4px);
  }
}

@media (prefers-reduced-motion) {
  .card:hover span {
    transform: none;
  }
}

/* Mobile */
@media (max-width: 700px) {
  .content {
    padding: 4rem;
  }

  .grid {
    grid-template-columns: 1fr;
    margin-bottom: 120px;
    max-width: 320px;
    text-align: center;
  }

  .card {
    padding: 1rem 2.5rem;
  }

  .card h2 {
    margin-bottom: 0.5rem;
  }

  .center {
    padding: 8rem 0 6rem;
  }

  .center::before {
    transform: none;
    height: 300px;
  }

  .description {
    font-size: 0.8rem;
  }

  .description a {
    padding: 1rem;
  }

  .description p,
  .description div {
    display: flex;
    justify-content: center;
    position: fixed;
    width: 100%;
  }

  .description p {
    align-items: center;
    inset: 0 0 auto;
    padding: 2rem 1rem 1.4rem;
    border-radius: 0;
    border: none;
    border-bottom: 1px solid rgba(var(--callout-border-rgb), 0.25);
    background: linear-gradient(
      to bottom,
      rgba(var(--background-start-rgb), 1),
      rgba(var(--callout-rgb), 0.5)
    );
    background-clip: padding-box;
    backdrop-filter: blur(24px);
  }

  .description div {
    align-items: flex-end;
    pointer-events: none;
    inset: auto 0 0;
    padding: 2rem;
    height: 200px;
    background: linear-gradient(
      to bottom,
      transparent 0%,
      rgb(var(--background-end-rgb)) 40%
    );
    z-index: 1;
  }
}

/* Tablet and Smaller Desktop */
@media (min-width: 701px) and (max-width: 1120px) {
  .grid {
    grid-template-columns: repeat(2, 50%);
  }
}

@media (prefers-color-scheme: dark) {
  .vercelLogo {
    filter: invert(1);
  }

  .logo {
    filter: invert(1) drop-shadow(0 0 0.3rem #ffffff70);
  }
}

@keyframes rotate {
  from {
    transform: rotate(360deg);
  }
  to {
    transform: rotate(0deg);
  }
}

.Deck_space_outer{
    display:flex;
    flex-flow:column nowrap;
}
.Deck_space{
    border:solid purple;
    position: relative;
    height:fit-content;
    display:flex;
    flex-flow: column nowrap;
    flex-grow:1;
    flex-basis:1;
}
.Deck_space_inner{
    display:flex;
    flex-grow:1;
    flex-basis:1;

    flex-flow:row nowrap;
}
.deck{
    border:solid green;
    height: 11vh;
    width:10vh;
    position: relative;
    flex-basis:1;
    flex-grow:1;

}
.played{
    border:solid orange;
    display:flex;
    width:22vh;
    height:15vh;
    padding:10px;
}
.discard{
    position: relative;
    border:solid;
    height: 11vh;
    width:10vh;
    flex-basis:1;
    flex-grow:1;

    border-color: red;
}
.points_and_play_area{
    display:flex;
    flex-flow:row nowrap;
}
.facedownCard{
    position: absolute;
    top:10;
    left:0;
    width: 160px;
    height: 160px;
    border: 2px solid;
    background-image: url("./cardBackground.png");
    background-size: cover;
}
.bets{
    display:flex;
    flex-flow:column nowrap;
    border:solid gray;
}
.bet_row{
    display:flex;
    flex-flow: row nowrap;
}
.bet{
    border:inset;
    flex-grow: 1;
}
.betLabel{
    font-size: 6vh;
}
.points{
display:flex;
flex-flow:row nowrap;
border:outset;
flex-basis:1;
align-items: center;
justify-content: center;
text-align: center;
font-size:2vh;
}
.offPoint{
    flex-grow: 1;
    color:black;
    background-color: rgb(101, 96, 108);
    display:grid;
    margin:10px;
}
.onPoint{
    flex-grow: 1;

    background-color: rgb(6, 67, 14);
    color:white;
}
.pointName{
    border:solid;
    border-color:white;;

}
.pointValue{
    border:solid;
    border-color:white;;
    border-top:none;
}
